var _eeue56$elm_html_test$Test_Html_Query_Internal$prefixOutputLine = F2(
	function (x, y) {
		return A2(_elm_lang$core$Basics_ops['++'], x, y);
	})('▼ ');
var _eeue56$elm_html_test$Test_Html_Query_Internal$showSelectorOutcomeInverse = F2(
	function (elmHtmlList, selector) {
		var outcome = function () {
			var _p0 = A2(
				_eeue56$elm_html_test$Test_Html_Selector_Internal$queryAll,
				{
					ctor: '::',
					_0: selector,
					_1: {ctor: '[]'}
				},
				elmHtmlList);
			if (_p0.ctor === '[]') {
				return '✓';
			} else {
				return '✗';
			}
		}();
		return A2(
			_elm_lang$core$String$join,
			' ',
			{
				ctor: '::',
				_0: outcome,
				_1: {
					ctor: '::',
					_0: 'has not',
					_1: {
						ctor: '::',
						_0: _eeue56$elm_html_test$Test_Html_Selector_Internal$selectorToString(selector),
						_1: {ctor: '[]'}
					}
				}
			});
	});
var _eeue56$elm_html_test$Test_Html_Query_Internal$showSelectorOutcome = F2(
	function (elmHtmlList, selector) {
		var outcome = function () {
			var _p1 = A2(
				_eeue56$elm_html_test$Test_Html_Selector_Internal$queryAll,
				{
					ctor: '::',
					_0: selector,
					_1: {ctor: '[]'}
				},
				elmHtmlList);
			if (_p1.ctor === '[]') {
				return '✗';
			} else {
				return '✓';
			}
		}();
		return A2(
			_elm_lang$core$String$join,
			' ',
			{
				ctor: '::',
				_0: outcome,
				_1: {
					ctor: '::',
					_0: 'has',
					_1: {
						ctor: '::',
						_0: _eeue56$elm_html_test$Test_Html_Selector_Internal$selectorToString(selector),
						_1: {ctor: '[]'}
					}
				}
			});
	});
var _eeue56$elm_html_test$Test_Html_Query_Internal$missingDescendants = F2(
	function (elmHtmlList, expected) {
		var isMissing = function (expectedDescendant) {
			return !A2(_eeue56$elm_html_test$Test_Html_Descendant$isDescendant, elmHtmlList, expectedDescendant);
		};
		return A2(_elm_lang$core$List$filter, isMissing, expected);
	});
var _eeue56$elm_html_test$Test_Html_Query_Internal$queryErrorToString = F2(
	function (query, error) {
		var _p2 = error;
		if (_p2.ctor === 'NoResultsForSingle') {
			return A2(_elm_lang$core$Basics_ops['++'], _p2._0, ' always expects to find 1 element, but it found 0 instead.');
		} else {
			var _p3 = _p2._1;
			return A2(
				_elm_lang$core$Basics_ops['++'],
				_p2._0,
				A2(
					_elm_lang$core$Basics_ops['++'],
					' always expects to find 1 element, but it found ',
					A2(
						_elm_lang$core$Basics_ops['++'],
						_elm_lang$core$Basics$toString(_p3),
						A2(
							_elm_lang$core$Basics_ops['++'],
							' instead.\n\n\nHINT: If you actually expected ',
							A2(
								_elm_lang$core$Basics_ops['++'],
								_elm_lang$core$Basics$toString(_p3),
								' elements, use Query.findAll instead of Query.find.')))));
		}
	});
var _eeue56$elm_html_test$Test_Html_Query_Internal$isElement = function (elmHtml) {
	var _p4 = elmHtml;
	if (_p4.ctor === 'NodeEntry') {
		return true;
	} else {
		return false;
	}
};
var _eeue56$elm_html_test$Test_Html_Query_Internal$getChildren = function (elmHtml) {
	var _p5 = elmHtml;
	if (_p5.ctor === 'NodeEntry') {
		return _p5._0.children;
	} else {
		return {ctor: '[]'};
	}
};
var _eeue56$elm_html_test$Test_Html_Query_Internal$getElementAtHelp = F2(
	function (index, list) {
		getElementAtHelp:
		while (true) {
			var _p6 = list;
			if (_p6.ctor === '[]') {
				return {ctor: '[]'};
			} else {
				if (_elm_lang$core$Native_Utils.eq(index, 0)) {
					return {
						ctor: '::',
						_0: _p6._0,
						_1: {ctor: '[]'}
					};
				} else {
					var _v6 = index - 1,
						_v7 = _p6._1;
					index = _v6;
					list = _v7;
					continue getElementAtHelp;
				}
			}
		}
	});
var _eeue56$elm_html_test$Test_Html_Query_Internal$getElementAt = F2(
	function (index, list) {
		var length = _elm_lang$core$List$length(list);
		return _elm_lang$core$Native_Utils.eq(length, 0) ? {ctor: '[]'} : A2(
			_eeue56$elm_html_test$Test_Html_Query_Internal$getElementAtHelp,
			A2(_elm_lang$core$Basics_ops['%'], index, length),
			list);
	});
var _eeue56$elm_html_test$Test_Html_Query_Internal$baseIndentation = '    ';
var _eeue56$elm_html_test$Test_Html_Query_Internal$joinAsList = F2(
	function (toStr, list) {
		return _elm_lang$core$List$isEmpty(list) ? '[]' : A2(
			_elm_lang$core$Basics_ops['++'],
			'[ ',
			A2(
				_elm_lang$core$Basics_ops['++'],
				A2(
					_elm_lang$core$String$join,
					', ',
					A2(_elm_lang$core$List$map, toStr, list)),
				' ]'));
	});
var _eeue56$elm_html_test$Test_Html_Query_Internal$withHtmlContext = F2(
	function (htmlStr, str) {
		return A2(
			_elm_lang$core$String$join,
			'\n\n',
			{
				ctor: '::',
				_0: str,
				_1: {
					ctor: '::',
					_0: htmlStr,
					_1: {ctor: '[]'}
				}
			});
	});
var _eeue56$elm_html_test$Test_Html_Query_Internal$prettyPrint = _eeue56$elm_html_in_elm$ElmHtml_ToString$nodeToStringWithOptions(
	{indent: 4, newLines: true});
var _eeue56$elm_html_test$Test_Html_Query_Internal$toOutputLine = function (_p7) {
	var _p8 = _p7;
	return _eeue56$elm_html_test$Test_Html_Query_Internal$prettyPrint(
		_eeue56$elm_html_test$Html_Inert$toElmHtml(_p8._0));
};
var _eeue56$elm_html_test$Test_Html_Query_Internal$addQueryFromHtmlLine = function (query) {
	return A2(
		_elm_lang$core$String$join,
		'\n\n',
		{
			ctor: '::',
			_0: _eeue56$elm_html_test$Test_Html_Query_Internal$prefixOutputLine('Query.fromHtml'),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$core$String$join,
					'\n',
					A2(
						_elm_lang$core$List$map,
						F2(
							function (x, y) {
								return A2(_elm_lang$core$Basics_ops['++'], x, y);
							})(_eeue56$elm_html_test$Test_Html_Query_Internal$baseIndentation),
						A2(
							_elm_lang$core$String$split,
							'\n',
							_eeue56$elm_html_test$Test_Html_Query_Internal$toOutputLine(query)))),
				_1: {ctor: '[]'}
			}
		});
};
var _eeue56$elm_html_test$Test_Html_Query_Internal$printIndented = F3(
	function (maxDigits, index, elmHtml) {
		var caption = A2(
			_elm_lang$core$String$append,
			_eeue56$elm_html_test$Test_Html_Query_Internal$baseIndentation,
			A3(
				_elm_lang$core$String$padRight,
				maxDigits + 3,
				_elm_lang$core$Native_Utils.chr(' '),
				A2(
					_elm_lang$core$Basics_ops['++'],
					_elm_lang$core$Basics$toString(index + 1),
					')')));
		var indentation = A2(
			_elm_lang$core$String$repeat,
			_elm_lang$core$String$length(caption),
			' ');
		var _p9 = A2(
			_elm_lang$core$String$split,
			'\n',
			_eeue56$elm_html_test$Test_Html_Query_Internal$prettyPrint(elmHtml));
		if (_p9.ctor === '[]') {
			return '';
		} else {
			return A2(
				_elm_lang$core$String$join,
				'\n',
				A2(
					F2(
						function (x, y) {
							return {ctor: '::', _0: x, _1: y};
						}),
					A2(_elm_lang$core$Basics_ops['++'], caption, _p9._0),
					A2(
						_elm_lang$core$List$map,
						_elm_lang$core$String$append(indentation),
						_p9._1)));
		}
	});
var _eeue56$elm_html_test$Test_Html_Query_Internal$getHtmlContext = function (elmHtmlList) {
	if (_elm_lang$core$List$isEmpty(elmHtmlList)) {
		return '0 matches found for this query.';
	} else {
		var maxDigits = _elm_lang$core$String$length(
			_elm_lang$core$Basics$toString(
				_elm_lang$core$List$length(elmHtmlList)));
		return A2(
			_elm_lang$core$String$join,
			'\n\n',
			A2(
				_elm_lang$core$List$indexedMap,
				_eeue56$elm_html_test$Test_Html_Query_Internal$printIndented(maxDigits),
				elmHtmlList));
	}
};
var _eeue56$elm_html_test$Test_Html_Query_Internal$toLinesHelp = F5(
	function (expectationFailure, elmHtmlList, selectorQueries, queryName, results) {
		var recurse = F3(
			function (newElmHtmlList, rest, result) {
				return A5(
					_eeue56$elm_html_test$Test_Html_Query_Internal$toLinesHelp,
					expectationFailure,
					newElmHtmlList,
					rest,
					queryName,
					{ctor: '::', _0: result, _1: results});
			});
		var bailOut = function (result) {
			return {
				ctor: '::',
				_0: A2(
					_elm_lang$core$String$join,
					'\n\n\n✗ ',
					{
						ctor: '::',
						_0: result,
						_1: {
							ctor: '::',
							_0: expectationFailure,
							_1: {ctor: '[]'}
						}
					}),
				_1: results
			};
		};
		var _p10 = selectorQueries;
		if (_p10.ctor === '[]') {
			return {
				ctor: '::',
				_0: A2(
					_elm_lang$core$String$join,
					'\n\n',
					{
						ctor: '::',
						_0: queryName,
						_1: {
							ctor: '::',
							_0: expectationFailure,
							_1: {ctor: '[]'}
						}
					}),
				_1: results
			};
		} else {
			var _p16 = _p10._1;
			var _p11 = _p10._0;
			switch (_p11.ctor) {
				case 'FindAll':
					var _p12 = _p11._0;
					var elements = A2(
						_eeue56$elm_html_test$Test_Html_Selector_Internal$queryAll,
						_p12,
						A2(_elm_lang$core$List$concatMap, _eeue56$elm_html_test$Test_Html_Query_Internal$getChildren, elmHtmlList));
					return A3(
						recurse,
						elements,
						_p16,
						A2(
							_eeue56$elm_html_test$Test_Html_Query_Internal$withHtmlContext,
							_eeue56$elm_html_test$Test_Html_Query_Internal$getHtmlContext(elements),
							A2(
								_elm_lang$core$Basics_ops['++'],
								'Query.findAll ',
								A2(_eeue56$elm_html_test$Test_Html_Query_Internal$joinAsList, _eeue56$elm_html_test$Test_Html_Selector_Internal$selectorToString, _p12))));
				case 'Find':
					var _p13 = _p11._0;
					var elements = A2(
						_eeue56$elm_html_test$Test_Html_Selector_Internal$queryAll,
						_p13,
						A2(_elm_lang$core$List$concatMap, _eeue56$elm_html_test$Test_Html_Query_Internal$getChildren, elmHtmlList));
					var result = A2(
						_eeue56$elm_html_test$Test_Html_Query_Internal$withHtmlContext,
						_eeue56$elm_html_test$Test_Html_Query_Internal$getHtmlContext(elements),
						A2(
							_elm_lang$core$Basics_ops['++'],
							'Query.find ',
							A2(_eeue56$elm_html_test$Test_Html_Query_Internal$joinAsList, _eeue56$elm_html_test$Test_Html_Selector_Internal$selectorToString, _p13)));
					return _elm_lang$core$Native_Utils.eq(
						_elm_lang$core$List$length(elements),
						1) ? A3(recurse, elements, _p16, result) : bailOut(result);
				case 'Children':
					var _p14 = _p11._0;
					var elements = A2(
						_eeue56$elm_html_test$Test_Html_Selector_Internal$queryAllChildren,
						_p14,
						A2(_elm_lang$core$List$concatMap, _eeue56$elm_html_test$Test_Html_Query_Internal$getChildren, elmHtmlList));
					return A3(
						recurse,
						elements,
						_p16,
						A2(
							_eeue56$elm_html_test$Test_Html_Query_Internal$withHtmlContext,
							_eeue56$elm_html_test$Test_Html_Query_Internal$getHtmlContext(elements),
							A2(
								_elm_lang$core$Basics_ops['++'],
								'Query.children ',
								A2(_eeue56$elm_html_test$Test_Html_Query_Internal$joinAsList, _eeue56$elm_html_test$Test_Html_Selector_Internal$selectorToString, _p14))));
				case 'First':
					var elements = A2(
						_elm_lang$core$Maybe$withDefault,
						{ctor: '[]'},
						A2(
							_elm_lang$core$Maybe$map,
							function (elem) {
								return {
									ctor: '::',
									_0: elem,
									_1: {ctor: '[]'}
								};
							},
							_elm_lang$core$List$head(elmHtmlList)));
					var result = A2(
						_eeue56$elm_html_test$Test_Html_Query_Internal$withHtmlContext,
						_eeue56$elm_html_test$Test_Html_Query_Internal$getHtmlContext(elements),
						'Query.first');
					return _elm_lang$core$Native_Utils.eq(
						_elm_lang$core$List$length(elements),
						1) ? A3(recurse, elements, _p16, result) : bailOut(result);
				default:
					var _p15 = _p11._0;
					var elements = A2(_eeue56$elm_html_test$Test_Html_Query_Internal$getElementAt, _p15, elmHtmlList);
					var result = A2(
						_eeue56$elm_html_test$Test_Html_Query_Internal$withHtmlContext,
						_eeue56$elm_html_test$Test_Html_Query_Internal$getHtmlContext(elements),
						A2(
							_elm_lang$core$Basics_ops['++'],
							'Query.index ',
							_elm_lang$core$Basics$toString(_p15)));
					return _elm_lang$core$Native_Utils.eq(
						_elm_lang$core$List$length(elements),
						1) ? A3(recurse, elements, _p16, result) : bailOut(result);
			}
		}
	});
var _eeue56$elm_html_test$Test_Html_Query_Internal$toLines = F3(
	function (expectationFailure, _p17, queryName) {
		var _p18 = _p17;
		return _elm_lang$core$List$reverse(
			A5(
				_eeue56$elm_html_test$Test_Html_Query_Internal$toLinesHelp,
				expectationFailure,
				{
					ctor: '::',
					_0: _eeue56$elm_html_test$Html_Inert$toElmHtml(_p18._0),
					_1: {ctor: '[]'}
				},
				_elm_lang$core$List$reverse(_p18._1),
				queryName,
				{ctor: '[]'}));
	});
var _eeue56$elm_html_test$Test_Html_Query_Internal$failWithQuery = F4(
	function (showTrace, queryName, query, expectation) {
		var _p19 = _elm_community$elm_test$Test_Runner$getFailure(expectation);
		if (_p19.ctor === 'Just') {
			var lines = A2(
				_elm_lang$core$List$map,
				_eeue56$elm_html_test$Test_Html_Query_Internal$prefixOutputLine,
				A3(_eeue56$elm_html_test$Test_Html_Query_Internal$toLines, _p19._0.message, query, queryName));
			var tracedLines = showTrace ? {
				ctor: '::',
				_0: _eeue56$elm_html_test$Test_Html_Query_Internal$addQueryFromHtmlLine(query),
				_1: lines
			} : lines;
			return _elm_community$elm_test$Expect$fail(
				A2(_elm_lang$core$String$join, '\n\n\n', tracedLines));
		} else {
			return expectation;
		}
	});
var _eeue56$elm_html_test$Test_Html_Query_Internal$Query = F2(
	function (a, b) {
		return {ctor: 'Query', _0: a, _1: b};
	});
var _eeue56$elm_html_test$Test_Html_Query_Internal$prependSelector = F2(
	function (_p20, selector) {
		var _p21 = _p20;
		return A2(
			_eeue56$elm_html_test$Test_Html_Query_Internal$Query,
			_p21._0,
			{ctor: '::', _0: selector, _1: _p21._1});
	});
var _eeue56$elm_html_test$Test_Html_Query_Internal$Index = function (a) {
	return {ctor: 'Index', _0: a};
};
var _eeue56$elm_html_test$Test_Html_Query_Internal$First = {ctor: 'First'};
var _eeue56$elm_html_test$Test_Html_Query_Internal$Children = function (a) {
	return {ctor: 'Children', _0: a};
};
var _eeue56$elm_html_test$Test_Html_Query_Internal$FindAll = function (a) {
	return {ctor: 'FindAll', _0: a};
};
var _eeue56$elm_html_test$Test_Html_Query_Internal$Find = function (a) {
	return {ctor: 'Find', _0: a};
};
var _eeue56$elm_html_test$Test_Html_Query_Internal$Single = F2(
	function (a, b) {
		return {ctor: 'Single', _0: a, _1: b};
	});
var _eeue56$elm_html_test$Test_Html_Query_Internal$expectAllHelp = F3(
	function (successes, check, list) {
		expectAllHelp:
		while (true) {
			var _p22 = list;
			if (_p22.ctor === '[]') {
				return _elm_community$elm_test$Expect$pass;
			} else {
				var expectation = check(
					A2(
						_eeue56$elm_html_test$Test_Html_Query_Internal$Single,
						false,
						A2(
							_eeue56$elm_html_test$Test_Html_Query_Internal$Query,
							_eeue56$elm_html_test$Html_Inert$fromElmHtml(_p22._0),
							{ctor: '[]'})));
				var _p23 = _elm_community$elm_test$Test_Runner$getFailure(expectation);
				if (_p23.ctor === 'Just') {
					var prefix = (_elm_lang$core$Native_Utils.cmp(successes, 0) > 0) ? A2(
						_elm_lang$core$Basics_ops['++'],
						'Element #',
						A2(
							_elm_lang$core$Basics_ops['++'],
							_elm_lang$core$Basics$toString(successes + 1),
							' failed this test:')) : 'The first element failed this test:';
					return _elm_community$elm_test$Expect$fail(
						A2(
							_elm_lang$core$String$join,
							'\n\n',
							{
								ctor: '::',
								_0: prefix,
								_1: {
									ctor: '::',
									_0: _p23._0.message,
									_1: {ctor: '[]'}
								}
							}));
				} else {
					var _v17 = successes + 1,
						_v18 = check,
						_v19 = _p22._1;
					successes = _v17;
					check = _v18;
					list = _v19;
					continue expectAllHelp;
				}
			}
		}
	});
var _eeue56$elm_html_test$Test_Html_Query_Internal$Multiple = F2(
	function (a, b) {
		return {ctor: 'Multiple', _0: a, _1: b};
	});
var _eeue56$elm_html_test$Test_Html_Query_Internal$MultipleResultsForSingle = F2(
	function (a, b) {
		return {ctor: 'MultipleResultsForSingle', _0: a, _1: b};
	});
var _eeue56$elm_html_test$Test_Html_Query_Internal$NoResultsForSingle = function (a) {
	return {ctor: 'NoResultsForSingle', _0: a};
};
var _eeue56$elm_html_test$Test_Html_Query_Internal$verifySingle = F2(
	function (queryName, list) {
		var _p24 = list;
		if (_p24.ctor === '[]') {
			return _elm_lang$core$Result$Err(
				_eeue56$elm_html_test$Test_Html_Query_Internal$NoResultsForSingle(queryName));
		} else {
			if (_p24._1.ctor === '[]') {
				return _elm_lang$core$Result$Ok(_p24._0);
			} else {
				return _elm_lang$core$Result$Err(
					A2(
						_eeue56$elm_html_test$Test_Html_Query_Internal$MultipleResultsForSingle,
						queryName,
						_elm_lang$core$List$length(_p24)));
			}
		}
	});
var _eeue56$elm_html_test$Test_Html_Query_Internal$traverseSelector = F2(
	function (selectorQuery, elmHtmlList) {
		var _p25 = selectorQuery;
		switch (_p25.ctor) {
			case 'Find':
				return A2(
					_elm_lang$core$Result$map,
					function (elem) {
						return {
							ctor: '::',
							_0: elem,
							_1: {ctor: '[]'}
						};
					},
					A2(
						_eeue56$elm_html_test$Test_Html_Query_Internal$verifySingle,
						'Query.find',
						A2(
							_eeue56$elm_html_test$Test_Html_Selector_Internal$queryAll,
							_p25._0,
							A2(_elm_lang$core$List$concatMap, _eeue56$elm_html_test$Test_Html_Query_Internal$getChildren, elmHtmlList))));
			case 'FindAll':
				return _elm_lang$core$Result$Ok(
					A2(
						_eeue56$elm_html_test$Test_Html_Selector_Internal$queryAll,
						_p25._0,
						A2(_elm_lang$core$List$concatMap, _eeue56$elm_html_test$Test_Html_Query_Internal$getChildren, elmHtmlList)));
			case 'Children':
				return _elm_lang$core$Result$Ok(
					A2(
						_eeue56$elm_html_test$Test_Html_Selector_Internal$queryAllChildren,
						_p25._0,
						A2(_elm_lang$core$List$concatMap, _eeue56$elm_html_test$Test_Html_Query_Internal$getChildren, elmHtmlList)));
			case 'First':
				return A2(
					_elm_lang$core$Maybe$withDefault,
					_elm_lang$core$Result$Err(
						_eeue56$elm_html_test$Test_Html_Query_Internal$NoResultsForSingle('Query.first')),
					A2(
						_elm_lang$core$Maybe$map,
						function (elem) {
							return _elm_lang$core$Result$Ok(
								{
									ctor: '::',
									_0: elem,
									_1: {ctor: '[]'}
								});
						},
						_elm_lang$core$List$head(elmHtmlList)));
			default:
				var _p26 = _p25._0;
				var elements = A2(_eeue56$elm_html_test$Test_Html_Query_Internal$getElementAt, _p26, elmHtmlList);
				return _elm_lang$core$Native_Utils.eq(
					_elm_lang$core$List$length(elements),
					1) ? _elm_lang$core$Result$Ok(elements) : _elm_lang$core$Result$Err(
					_eeue56$elm_html_test$Test_Html_Query_Internal$NoResultsForSingle(
						A2(
							_elm_lang$core$Basics_ops['++'],
							'Query.index ',
							_elm_lang$core$Basics$toString(_p26))));
		}
	});
var _eeue56$elm_html_test$Test_Html_Query_Internal$traverseSelectors = F2(
	function (selectorQueries, elmHtmlList) {
		return A3(
			_elm_lang$core$List$foldr,
			function (_p27) {
				return _elm_lang$core$Result$andThen(
					_eeue56$elm_html_test$Test_Html_Query_Internal$traverseSelector(_p27));
			},
			_elm_lang$core$Result$Ok(elmHtmlList),
			selectorQueries);
	});
var _eeue56$elm_html_test$Test_Html_Query_Internal$traverse = function (_p28) {
	var _p29 = _p28;
	return A2(
		_eeue56$elm_html_test$Test_Html_Query_Internal$traverseSelectors,
		_p29._1,
		{
			ctor: '::',
			_0: _eeue56$elm_html_test$Html_Inert$toElmHtml(_p29._0),
			_1: {ctor: '[]'}
		});
};
var _eeue56$elm_html_test$Test_Html_Query_Internal$expectAll = F2(
	function (check, query) {
		var _p30 = _eeue56$elm_html_test$Test_Html_Query_Internal$traverse(query);
		if (_p30.ctor === 'Ok') {
			return A3(_eeue56$elm_html_test$Test_Html_Query_Internal$expectAllHelp, 0, check, _p30._0);
		} else {
			return _elm_community$elm_test$Expect$fail(
				A2(_eeue56$elm_html_test$Test_Html_Query_Internal$queryErrorToString, query, _p30._0));
		}
	});
var _eeue56$elm_html_test$Test_Html_Query_Internal$multipleToExpectation = F2(
	function (_p31, check) {
		var _p32 = _p31;
		var _p34 = _p32._1;
		var _p33 = _eeue56$elm_html_test$Test_Html_Query_Internal$traverse(_p34);
		if (_p33.ctor === 'Ok') {
			return check(_p33._0);
		} else {
			return _elm_community$elm_test$Expect$fail(
				A2(_eeue56$elm_html_test$Test_Html_Query_Internal$queryErrorToString, _p34, _p33._0));
		}
	});
var _eeue56$elm_html_test$Test_Html_Query_Internal$contains = F2(
	function (expectedDescendants, query) {
		var _p35 = _eeue56$elm_html_test$Test_Html_Query_Internal$traverse(query);
		if (_p35.ctor === 'Ok') {
			var prettyPrint = function (missingDescendants) {
				return A2(
					_elm_lang$core$String$join,
					'\n\n---------------------------------------------\n\n',
					A2(
						_elm_lang$core$List$indexedMap,
						F2(
							function (index, descendant) {
								return A3(_eeue56$elm_html_test$Test_Html_Query_Internal$printIndented, 3, index, descendant);
							}),
						missingDescendants));
			};
			var missing = A2(_eeue56$elm_html_test$Test_Html_Query_Internal$missingDescendants, _p35._0, expectedDescendants);
			return _elm_lang$core$List$isEmpty(missing) ? _elm_community$elm_test$Expect$pass : _elm_community$elm_test$Expect$fail(
				A2(
					_elm_lang$core$String$join,
					'',
					{
						ctor: '::',
						_0: '\t✗ /',
						_1: {
							ctor: '::',
							_0: _elm_lang$core$Basics$toString(
								_elm_lang$core$List$length(missing)),
							_1: {
								ctor: '::',
								_0: '\\ missing descendants: \n\n',
								_1: {
									ctor: '::',
									_0: prettyPrint(missing),
									_1: {ctor: '[]'}
								}
							}
						}
					}));
		} else {
			return _elm_community$elm_test$Expect$fail(
				A2(_eeue56$elm_html_test$Test_Html_Query_Internal$queryErrorToString, query, _p35._0));
		}
	});
var _eeue56$elm_html_test$Test_Html_Query_Internal$has = F2(
	function (selectors, query) {
		var _p36 = _eeue56$elm_html_test$Test_Html_Query_Internal$traverse(query);
		if (_p36.ctor === 'Ok') {
			var _p37 = _p36._0;
			return _elm_lang$core$List$isEmpty(
				A2(_eeue56$elm_html_test$Test_Html_Selector_Internal$queryAll, selectors, _p37)) ? _elm_community$elm_test$Expect$fail(
				A2(
					_elm_lang$core$String$join,
					'\n',
					A2(
						_elm_lang$core$List$map,
						_eeue56$elm_html_test$Test_Html_Query_Internal$showSelectorOutcome(_p37),
						selectors))) : _elm_community$elm_test$Expect$pass;
		} else {
			return _elm_community$elm_test$Expect$fail(
				A2(_eeue56$elm_html_test$Test_Html_Query_Internal$queryErrorToString, query, _p36._0));
		}
	});
var _eeue56$elm_html_test$Test_Html_Query_Internal$hasNot = F2(
	function (selectors, query) {
		var _p38 = _eeue56$elm_html_test$Test_Html_Query_Internal$traverse(query);
		if (_p38.ctor === 'Ok') {
			if (_p38._0.ctor === '[]') {
				return _elm_community$elm_test$Expect$pass;
			} else {
				var _p40 = _p38._0;
				var _p39 = A2(_eeue56$elm_html_test$Test_Html_Selector_Internal$queryAll, selectors, _p40);
				if (_p39.ctor === '[]') {
					return _elm_community$elm_test$Expect$pass;
				} else {
					return _elm_community$elm_test$Expect$fail(
						A2(
							_elm_lang$core$String$join,
							'\n',
							A2(
								_elm_lang$core$List$map,
								_eeue56$elm_html_test$Test_Html_Query_Internal$showSelectorOutcomeInverse(_p40),
								selectors)));
				}
			}
		} else {
			return _elm_community$elm_test$Expect$pass;
		}
	});
